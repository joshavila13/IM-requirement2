package scis.ui.products;

import scis.Data;
import scis.model.Products;
import scis.ui.CustomDocumentListener;
import scis.ui.ShowProcessor;
import scis.utility.AppUtils;

import javax.swing.event.DocumentEvent;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.List;


public class ShowProductsPanel extends javax.swing.JPanel implements ShowProcessor<Products> {

    /**
     * Creates new form ShowProductsPanel
     */
    public ShowProductsPanel() {
        initComponents();
        updateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCreateNewProduct = new javax.swing.JButton();
        lblSearchProduct = new javax.swing.JLabel();
        txtSearchProduct = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();

        btnCreateNewProduct.setText("Create New Product");
        btnCreateNewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewProductActionPerformed(evt);
            }
        });

        lblSearchProduct.setText("Search");

        CustomDocumentListener cdl = new CustomDocumentListener(e ->{
            searchAction(e);
        });
        txtSearchProduct.getDocument().addDocumentListener(cdl);

        tblProducts.setAutoCreateRowSorter(true);
        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Name", "Description", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProducts);
        if (tblProducts.getColumnModel().getColumnCount() > 0) {
            tblProducts.getColumnModel().getColumn(0).setMinWidth(50);
            tblProducts.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblProducts.getColumnModel().getColumn(0).setMaxWidth(50);
            tblProducts.getColumnModel().getColumn(1).setMinWidth(150);
            tblProducts.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblProducts.getColumnModel().getColumn(1).setMaxWidth(150);
            tblProducts.getColumnModel().getColumn(3).setMinWidth(100);
            tblProducts.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblProducts.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSearchProduct)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCreateNewProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCreateNewProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSearchProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateNewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewProductActionPerformed

    }//GEN-LAST:event_btnCreateNewProductActionPerformed

    @Override
    public void showEntities(List<Products> entities) {
        if (tblProducts.getRowCount() != 0)
            AppUtils.removeAll(tblProducts);

        if (AppUtils.isListEmpty(entities)) return;

        DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();

        for (int i = 0; i < entities.size(); i++) {
            Products product = entities.get(i);
            String name = product.getProdid();
            String address = product.getDescription();
            double price = product.getPrice();
            Object[] data = {(i + 1), name, address, price};

            model.addRow(data);
        }
    }

    @Override
    public List<Products> getEntities() {
        AppUtils.openDB();
        ArrayList<Products> list = Data.getProducts();
        AppUtils.closeDB(this);
        return list;
    }

    @Override
    public void updateTable() {
        List<Products> products = getEntities();
        showEntities(products);
    }

    @Override
    public void searchAction(DocumentEvent documentEvent) {
        String searchTxt = txtSearchProduct.getText();
        AppUtils.openDB();
        List<Products> products = Data.getProducts(searchTxt);
        AppUtils.closeDB(this);
        showEntities(products);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateNewProduct;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSearchProduct;
    private javax.swing.JTable tblProducts;
    private javax.swing.JTextField txtSearchProduct;
    // End of variables declaration//GEN-END:variables
}
